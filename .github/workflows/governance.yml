name: Governance Checks

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  governance-check:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run build check
        run: npm run build

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Check memory-bank alignment
        run: |
          # Verify memory-bank files exist
          if [ ! -f ".kilocode/rules/memory-bank/architecture.md" ]; then
            echo "‚ùå Missing architecture.md in memory-bank"
            exit 1
          fi
          if [ ! -f ".kilocode/rules/memory-bank/context.md" ]; then
            echo "‚ùå Missing context.md in memory-bank"
            exit 1
          fi
          echo "‚úÖ Memory-bank files present"

      - name: Check auto-approval compliance
        run: |
          # Check if auto-approval.md exists
          if [ ! -f ".kilocode/rules/auto-approval.md" ]; then
            echo "‚ùå Missing auto-approval.md policy"
            exit 1
          fi
          echo "‚úÖ Auto-approval policy present"

      - name: Check escalation procedures
        run: |
          # Check if escalation.md exists
          if [ ! -f ".kilocode/rules/escalation.md" ]; then
            echo "‚ùå Missing escalation.md procedures"
            exit 1
          fi
          echo "‚úÖ Escalation procedures present"

      - name: Validate PR template compliance
        run: |
          # Check if PR template exists
          if [ ! -f ".github/PULL_REQUEST_TEMPLATE.md" ]; then
            echo "‚ùå Missing PR template"
            exit 1
          fi
          echo "‚úÖ PR template present"

      - name: Check for destructive changes
        run: |
          # Check for potentially destructive database changes
          if git diff --name-only HEAD~1 | grep -q "prisma/schema.prisma"; then
            echo "‚ö†Ô∏è  Database schema changes detected - manual review required"
            echo "Please ensure changes are additive only or have been approved"
          fi

      - name: Check for infrastructure changes
        run: |
          # Check for infrastructure changes that require approval
          INFRA_FILES=".github/ next.config.js package.json"
          for file in $INFRA_FILES; do
            if git diff --name-only HEAD~1 | grep -q "$file"; then
              echo "‚ö†Ô∏è  Infrastructure changes detected in $file - manual review required"
            fi
          done

      - name: Comment on PR with governance status
        uses: actions/github-script@v7
        with:
          script: |
            const body = `
            ## ü§ñ Governance Check Results

            ‚úÖ **Build Status**: Passed
            ‚úÖ **Memory-Bank Alignment**: Verified
            ‚úÖ **Policy Compliance**: Confirmed
            ‚úÖ **Template Validation**: Complete

            ### Ready-Gate Requirements
            - [x] Build successful (\`npm run build\` passed)
            - [x] Memory-bank files present and accessible
            - [x] Auto-approval and escalation policies in place
            - [x] PR template configured

            ### Next Steps
            1. **Preview Deployment**: Will be triggered by Vercel
            2. **Manual Review**: Required for any infrastructure or destructive changes
            3. **Approval**: At least 1 approving review required

            ---
            *This check was performed automatically by the Governance workflow.*
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  preview-check:
    runs-on: ubuntu-latest
    needs: governance-check
    if: github.event.pull_request.draft == false

    steps:
      - name: Wait for Vercel preview
        run: |
          echo "Waiting for Vercel preview deployment..."
          # This step would ideally wait for Vercel deployment webhook
          # For now, we'll just add a delay
          sleep 30

      - name: Check preview deployment status
        run: |
          # This would check Vercel deployment status via API
          # For now, we'll assume success and note that manual verification is needed
          echo "‚ö†Ô∏è  Preview deployment status check requires Vercel API integration"
          echo "Please manually verify that the preview URL loads and core pages (/admin, /rooms) are accessible"

      - name: Comment on preview status
        uses: actions/github-script@v7
        with:
          script: |
            const body = `
            ## üîç Preview Deployment Check

            ‚ö†Ô∏è **Manual Verification Required**

            Please verify the following in the Vercel preview:
            - [ ] Preview URL loads successfully
            - [ ] Core pages accessible (\`/admin\`, \`/rooms\`)
            - [ ] No console errors
            - [ ] All functionality works as expected

            ---
            *Preview check initiated by Governance workflow.*
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });